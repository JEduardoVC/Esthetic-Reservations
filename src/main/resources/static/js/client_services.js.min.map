{"version":3,"sources":["client_services.js"],"names":["cita","fecha","hora","servicios","contador","page","userId","sessionStorage","getItem","branchId","myHeaders","Headers","async","showInfoClient","resultadoUsuario","fetch","method","headers","redirect","client","json","nameUser","document","querySelector","name","lastName","textContent","showInfoBranch","resultadoBranch","branch","branchName","showServices","resultadoServicios","div_servicios","sinServicios","createElement","className","appendChild","forEach","servicio","id","service_name","duration","price","div_servicio","innerHTML","addEventListener","classList","contains","remove","removeService","add","addService","parseInt","precio","e","console","error","filter","servicioObj","nextPage","pagerButtons","previousPage","previosPage","mostrarResumen","mostrarSeccion","seccionAnterior","backDateDisabled","inputFecha","fechaAhora","Date","fechaDeshabilitar","getFullYear","getMonth","getDate","min","horaCita","inputHora","target","value","split","scheduleOpen","scheduleClose","setTimeout","fechaCita","fechaInput","dia","getUTCDay","includes","preventDefault","mostrarAlerta","resumenDiv","firstChild","removeChild","Object","values","noServicios","headingCita","serviciosCita","headingServicios","cantidad","contenedorServicio","textoServicio","precioServicio","cantidadPagar","btnReserve","onclick","makeAnAppointment","log","append"],"mappings":"AAAA,MAAMA,KAAO,CACTC,MAAO,GACPC,KAAM,GACNC,UAAW,IAGf,IAAIC,SAAW,EAEXC,KAAO,EAEX,MAAMC,OAASC,eAAeC,QAAQ,UAChCC,SAAWF,eAAeC,QAAQ,YAClCE,UAAY,IAAIC,QA6BtBC,eAAeC,iBACX,MAAMC,QAAyBC,MAAM,aAAaT,OAAS,CAACU,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WACnGC,QAAeL,EAAiBM,OAChCC,EAAWC,SAASC,cAAc,oBAClCC,KAAEA,EAAIC,SAAEA,GAAaN,EAC3BE,EAASK,YAAc,GAAGF,KAAQC,IAGtCb,eAAee,iBACX,MAAMC,QAAwBb,MAAM,eAAeN,SAAW,CAACO,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WACtGW,QAAeD,EAAgBR,QAC/BU,WAAEA,GAAeD,EACJP,SAASC,cAAc,kBAC/BG,YAAc,GAAGI,EAGhClB,eAAemB,eACX,IACI,MAAMC,QAA2BjB,MAAM,+BAA+BN,SAAW,CAACO,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WACzHf,QAAkB6B,EAAmBZ,OAC3C,GAA2B,GAAxBjB,EAAmB,QAAO,CACzB,MAAM8B,EAAgBX,SAASC,cAAc,cACvCW,EAAeZ,SAASa,cAAc,KAC5CD,EAAaR,YAAc,+BAC3BQ,EAAaE,UAAY,gBACzBH,EAAcI,YAAYH,GAE9B/B,EAAmB,QAAEmC,QAAQC,IACzB,MAAMC,GAAEA,EAAEC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,GAAUJ,EACxCN,EAAgBX,SAASC,cAAc,cACvCqB,EAAetB,SAASa,cAAc,OAC5CS,EAAaR,UAAY,WACzBQ,EAAaC,UACb,uCACwBJ,kDACMC,gDACNC,6BAExBV,EAAcI,YAAYO,GAC1BA,EAAaE,iBAAiB,SAAQ,WAClC,GAAGF,EAAaG,UAAUC,SAAS,yBAC/BJ,EAAaG,UAAUE,OAAO,yBAC9BC,cAAcV,OACX,CACHI,EAAaG,UAAUI,IAAI,yBAM3BC,WALoB,CAChBZ,GAAIa,SAASb,GACbhB,KAAMiB,EACNa,OAAQX,UAO5B,MAAMY,GACFC,QAAQC,MAAMF,IAItB,SAASL,cAAcV,GACnB,MAAMrC,UAAEA,GAAcH,KACtBA,KAAKG,UAAYA,EAAUuD,OAAOnB,GAAYA,EAASC,KAAOA,GAGlE,SAASY,WAAWO,GAChB,MAAMxD,UAAEA,GAAcH,KACtBA,KAAKG,UAAY,IAAIA,EAAWwD,GAGpC,SAASC,WACL,MAAMA,EAAWtC,SAASC,cAAc,cACzB,MAAZqC,GACCA,EAASd,iBAAiB,QAAS,KAC/BzC,OACAwD,iBAKZ,SAASC,eACL,MAAMA,EAAexC,SAASC,cAAc,aACzB,MAAhBuC,GACCA,EAAahB,iBAAiB,QAAS,KACnCzC,OACAwD,iBAKZ,SAASA,eACL,MAAMD,EAAWtC,SAASC,cAAc,cAClCwC,EAAczC,SAASC,cAAc,aAC9B,IAATlB,KACA0D,EAAYhB,UAAUI,IAAI,WACX,IAAT9C,MACN0D,EAAYhB,UAAUE,OAAO,WAC7BW,EAASb,UAAUE,OAAO,aAE1BW,EAASb,UAAUI,IAAI,WACvBY,EAAYhB,UAAUE,OAAO,WAC7Be,kBAEJC,iBAGJ,SAASA,iBAEL,MAAMC,EAAkB5C,SAASC,cAAc,oBAC3C2C,GACAA,EAAgBnB,UAAUE,OAAO,mBAEf3B,SAASC,cAAc,SAASlB,MACxC0C,UAAUI,IAAI,mBAGhC,SAASgB,mBACL,MAAMC,EAAa9C,SAASC,cAAc,UAEpC8C,EAAa,IAAIC,KAIjBC,EAAoB,GAHbF,EAAWG,iBACZH,EAAWI,WAAa,KACxBJ,EAAWK,UAAY,IAGnCN,EAAWO,IAAMJ,EAGrB3D,eAAegE,WACX,MAAMhD,QAAwBb,MAAM,eAAeN,SAAW,CAACO,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WACtGW,QAAeD,EAAgBR,OAC/ByD,EAAYvD,SAASC,cAAc,SACzCsD,EAAU/B,iBAAiB,QAASS,IAChC,MAAMqB,EAAWrB,EAAEuB,OAAOC,MACpB7E,EAAO0E,EAASI,MAAM,MACtBC,aAAEA,EAAYC,cAAEA,GAAkBrD,EACrC3B,EAAK,IAAM+E,EAAaD,MAAM,KAAK,IAAM9E,EAAK,IAAM+E,EAAaD,MAAM,KAAK,GAC3EhF,KAAKE,KAAO0E,GAEZpB,QAAQC,MAAM,mBACd0B,WAAW,KACPN,EAAUE,MAAQ,IACnB,QAKf,SAASK,YACL,MAAMC,EAAa/D,SAASC,cAAc,UAC1C8D,EAAWvC,iBAAiB,QAASS,IACjC,MAAM+B,EAAM,IAAIhB,KAAKf,EAAEuB,OAAOC,OAAOQ,YACjC,CAAC,EAAG,GAAGC,SAASF,IAChB/B,EAAEkC,iBACFJ,EAAWN,MAAQ,GACnBW,cAAc,oCAAqC,UAEnD1F,KAAKC,MAAQoF,EAAWN,QAKpCnE,eAAeoD,iBAEX,MAAM7D,UAAEA,EAASF,MAAEA,EAAKC,KAAEA,GAASF,KAG7B2F,EAAarE,SAASC,cAAc,YAG1C,KAAOoE,EAAWC,YACdD,EAAWE,YAAYF,EAAWC,YAGtC,GAAIE,OAAOC,OAAO/F,MAAMwF,SAAS,IAAK,CAClC,MAAMQ,EAAc1E,SAASa,cAAc,KAW3C,OAVA6D,EAAYtE,YAAc,yCAC1BsE,EAAYjD,UAAUI,IAAI,uBAG1BwC,EAAWtD,YAAY2D,GAS3B,MAAMC,EAAc3E,SAASa,cAAc,MAC3C8D,EAAYvE,YAAc,kBAE1B,MAAMZ,QAAyBC,MAAM,aAAaT,OAAS,CAACU,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WACnGC,QAAeL,EAAiBM,QAChCI,KAAEA,EAAIC,SAAEA,GAAaN,EAGrBiE,EAAY9D,SAASa,cAAc,KACzCiD,EAAUvC,UAAY,uBAAuB5C,EAE7C,MAAM2E,EAAWtD,SAASa,cAAc,KACxCyC,EAAS/B,UAAY,sBAAsB3C,EAE3C,MAAMgG,EAAgB5E,SAASa,cAAc,OAC7C+D,EAAcnD,UAAUI,IAAI,qBAE5B,MAAMgD,EAAmB7E,SAASa,cAAc,MAChDgE,EAAiBzE,YAAc,uBAE/BwE,EAAc7D,YAAY8D,GAE1B,IAAIC,EAAW,EAGfjG,EAAUmC,QAAQC,IACd,MAAMf,KAAGA,EAAI8B,OAAEA,GAAWf,EACpB8D,EAAqB/E,SAASa,cAAc,OAClDkE,EAAmBtD,UAAUI,IAAI,uBAEjC,MAAMmD,EAAgBhF,SAASa,cAAc,KAC7CmE,EAAc5E,YAAcF,EAE5B,MAAM+E,EAAiBjF,SAASa,cAAc,KAC9CoE,EAAe7E,YAAc,IAAM4B,EACnCiD,EAAexD,UAAUI,IAAI,UAE7BiD,GAAY/C,SAASC,GAGrB+C,EAAmBhE,YAAYiE,GAC/BD,EAAmBhE,YAAYkE,GAE/BL,EAAc7D,YAAYgE,KAE9BV,EAAWtD,YAAY4D,GACvBN,EAAWtD,YAAY+C,GACvBO,EAAWtD,YAAYuC,GAEvBe,EAAWtD,YAAY6D,GAEvB,MAAMM,EAAgBlF,SAASa,cAAc,KAC7CqE,EAAczD,UAAUI,IAAI,SAC5BqD,EAAc3D,UAAY,kCAAkCuD,EAE5DT,EAAWtD,YAAYmE,GAGvB,MAAMC,EAAanF,SAASa,cAAc,UAC1CsE,EAAW1D,UAAUI,IAAI,iBACzBsD,EAAW1D,UAAUI,IAAI,gBACzBsD,EAAW/E,YAAc,gBACzB+E,EAAWC,QAAUC,kBAErBhB,EAAWtD,YAAYoE,GAG3B7F,eAAe+F,oBACXnD,QAAQoD,IAAI5G,YACgBe,MAAM,aAAaT,OAAS,CAACU,OAAQ,MAAOC,QAASP,UAAWQ,SAAU,WA7R1GR,UAAUmG,OAAO,gBAAiB,UAAUtG,eAAeC,QAAQ,UAEnEc,SAASwB,iBAAiB,oBAAoB,WAE1CjC,iBACAc,iBAGAI,eAGAkC,iBAGAL,WACAE,eAGAD,eAGAM,mBACAS,WACAQ","file":"client_services.js","sourcesContent":["const cita = {\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\nlet contador = 0;\r\n\r\nlet page = 1;\r\n\r\nconst userId = sessionStorage.getItem(\"userId\");\r\nconst branchId = sessionStorage.getItem(\"branchId\");\r\nconst myHeaders = new Headers();\r\nmyHeaders.append(\"Authorization\", `Bearer ${sessionStorage.getItem(\"token\")}` );\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Show info for nav\r\n    showInfoClient();\r\n    showInfoBranch();\r\n    \r\n    // Show services\r\n    showServices();\r\n\r\n    // Show seccion \r\n    mostrarSeccion()\r\n    \r\n    // Buttons\r\n    nextPage();\r\n    previousPage();\r\n\r\n    // Paginator\r\n    pagerButtons();\r\n\r\n    // Date and hour\r\n    backDateDisabled();\r\n    horaCita();\r\n    fechaCita();\r\n\r\n    //Show summary of the cita\r\n    //mostrarResumen();\r\n});\r\nasync function showInfoClient(){\r\n    const resultadoUsuario = await fetch(`/api/user/${userId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n    const client = await resultadoUsuario.json();\r\n    const nameUser = document.querySelector(\"#nombre-usuario\");\r\n    const { name, lastName } = client;\r\n    nameUser.textContent = `${name} ${lastName}`;\r\n}\r\n\r\nasync function showInfoBranch(){\r\n    const resultadoBranch = await fetch(`/api/branch/${branchId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n    const branch = await resultadoBranch.json();\r\n    const { branchName } = branch;\r\n    const nameBranch = document.querySelector(\"#nombre-branch\");\r\n    nameBranch.textContent = `${branchName}`;\r\n}\r\n\r\nasync function showServices(){\r\n    try{\r\n        const resultadoServicios = await fetch(`/api/owner/servicios/branch/${branchId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n        const servicios = await resultadoServicios.json();\r\n        if(servicios[\"content\"] == 0){\r\n            const div_servicios = document.querySelector(\"#servicios\");\r\n            const sinServicios = document.createElement(\"P\");\r\n            sinServicios.textContent = \"No hay servicios registrados\"\r\n            sinServicios.className = \"sin-contenido\";\r\n            div_servicios.appendChild(sinServicios)\r\n        }\r\n        servicios[\"content\"].forEach(servicio => {\r\n            const { id, service_name, duration, price } = servicio;\r\n            const div_servicios = document.querySelector(\"#servicios\");\r\n            const div_servicio = document.createElement(\"div\");\r\n            div_servicio.className = \"servicio\";\r\n            div_servicio.innerHTML =\r\n            `\r\n                <p class=\"titulo\">${service_name}</p>\r\n                <p>Duracion aproximada: ${duration} min</p>\r\n                <p>Precio: <span>$${price}</span></p>\r\n            `;\r\n            div_servicios.appendChild(div_servicio);\r\n            div_servicio.addEventListener(\"click\",function(){\r\n                if(div_servicio.classList.contains(\"servicio-seleccionado\")){\r\n                    div_servicio.classList.remove(\"servicio-seleccionado\");\r\n                    removeService(id);\r\n                } else {\r\n                    div_servicio.classList.add(\"servicio-seleccionado\");\r\n                    const servicioObj = {\r\n                        id: parseInt(id),\r\n                        name: service_name,\r\n                        precio: price\r\n                    }\r\n                    addService(servicioObj);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    catch(e){\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nfunction removeService(id) {\r\n    const { servicios } = cita;\r\n    cita.servicios = servicios.filter(servicio => servicio.id !== id);\r\n}\r\n\r\nfunction addService(servicioObj) {\r\n    const { servicios } = cita;\r\n    cita.servicios = [...servicios, servicioObj];\r\n}\r\n\r\nfunction nextPage() {\r\n    const nextPage = document.querySelector(`#siguiente`);\r\n    if(nextPage != null){\r\n        nextPage.addEventListener(\"click\", () =>{\r\n            page++;\r\n            pagerButtons();\r\n        })\r\n    }\r\n}\r\n\r\nfunction previousPage() {\r\n    const previousPage = document.querySelector(`#anterior`);\r\n    if(previousPage != null){\r\n        previousPage.addEventListener(\"click\", () =>{\r\n            page--;\r\n            pagerButtons();\r\n        })\r\n    }\r\n}\r\n\r\nfunction pagerButtons(){\r\n    const nextPage = document.querySelector(\"#siguiente\");\r\n    const previosPage = document.querySelector(\"#anterior\");\r\n    if (page === 1) {\r\n        previosPage.classList.add('ocultar');\r\n    }else if (page === 2) {\r\n        previosPage.classList.remove('ocultar');\r\n        nextPage.classList.remove('ocultar');\r\n    } else {\r\n        nextPage.classList.add('ocultar');\r\n        previosPage.classList.remove('ocultar');\r\n        mostrarResumen(); // Estamos en la página 3, carga el resumen de la cita\r\n    }\r\n    mostrarSeccion(); // Cambia la sección que se muestra por la de la página\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    // Eliminar mostrar-seccion de la sección anterior\r\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\r\n    if (seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar-seccion');\r\n    }\r\n    const seccionActual = document.querySelector(`#paso-${page}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n}\r\n\r\nfunction backDateDisabled() {\r\n    const inputFecha = document.querySelector('#fecha');\r\n\r\n    const fechaAhora = new Date();\r\n    const year = fechaAhora.getFullYear();\r\n    const mes = fechaAhora.getMonth() + 1;\r\n    const dia = fechaAhora.getDate() + 1;\r\n    const fechaDeshabilitar = `${year}-${mes}-${dia}`;\r\n\r\n    inputFecha.min = fechaDeshabilitar;\r\n}\r\n\r\nasync function horaCita() {\r\n    const resultadoBranch = await fetch(`/api/branch/${branchId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n    const branch = await resultadoBranch.json();\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', e => {\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(':');\r\n        const { scheduleOpen, scheduleClose } = branch;\r\n        if(hora[0] >= scheduleOpen.split(\":\")[0] && hora[1] >= scheduleOpen.split(\":\")[1]) {\r\n            cita.hora = horaCita;\r\n        } else {\r\n            console.error(\"Es muy temprano\");\r\n            setTimeout(() => {\r\n                inputHora.value = '';\r\n            }, 3000);\r\n        }\r\n    });\r\n}\r\n\r\nfunction fechaCita() {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    fechaInput.addEventListener('input', e => {\r\n        const dia = new Date(e.target.value).getUTCDay();\r\n        if ([0, 6].includes(dia)) {\r\n            e.preventDefault();\r\n            fechaInput.value = '';\r\n            mostrarAlerta('Fines de Semana no son permitidos', 'error');\r\n        } else {\r\n            cita.fecha = fechaInput.value;\r\n        }\r\n    })\r\n}\r\n\r\nasync function mostrarResumen() {\r\n    // Destructuring\r\n    const { servicios, fecha, hora } = cita;\r\n\r\n    // Seleccionar el resumen\r\n    const resumenDiv = document.querySelector('#resumen');\r\n    \r\n    // Limpia el HTML previo\r\n    while (resumenDiv.firstChild) {\r\n        resumenDiv.removeChild(resumenDiv.firstChild);\r\n    }\r\n    // validación de objeto\r\n    if (Object.values(cita).includes('')) {\r\n        const noServicios = document.createElement('P');\r\n        noServicios.textContent = 'Faltan datos de Servicios, hora, fecha';\r\n        noServicios.classList.add('invalidar-cita');\r\n\r\n        // agregar a resumen Div\r\n        resumenDiv.appendChild(noServicios);\r\n        /*Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Faltan datos de Servicios, hora, fecha!',\r\n        })*/\r\n        return;\r\n    }\r\n\r\n    const headingCita = document.createElement('H1');\r\n    headingCita.textContent = 'Resumen de cita';\r\n\r\n    const resultadoUsuario = await fetch(`/api/user/${userId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n    const client = await resultadoUsuario.json();\r\n    const { name, lastName } = client;\r\n\r\n    // Mostrar el resumen\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span>Fecha:</span> ${fecha}`;\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span>Hora:</span> ${hora}`;\r\n\r\n    const serviciosCita = document.createElement('DIV');\r\n    serviciosCita.classList.add('resumen-servicios');\r\n\r\n    const headingServicios = document.createElement('H3');\r\n    headingServicios.textContent = 'Resumen de Servicios';\r\n\r\n    serviciosCita.appendChild(headingServicios);\r\n\r\n    let cantidad = 0;\r\n\r\n    // Iterar sobre el arreglo de servicios\r\n    servicios.forEach(servicio => {\r\n        const {  name, precio } = servicio;\r\n        const contenedorServicio = document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio');\r\n\r\n        const textoServicio = document.createElement('P');\r\n        textoServicio.textContent = name;\r\n\r\n        const precioServicio = document.createElement('P');\r\n        precioServicio.textContent = \"$\" + precio;\r\n        precioServicio.classList.add('precio');\r\n\r\n        cantidad += parseInt(precio);\r\n\r\n        // Colocar texto y precio en el div\r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        serviciosCita.appendChild(contenedorServicio);\r\n    });\r\n    resumenDiv.appendChild(headingCita);\r\n    resumenDiv.appendChild(fechaCita);\r\n    resumenDiv.appendChild(horaCita);\r\n\r\n    resumenDiv.appendChild(serviciosCita);\r\n\r\n    const cantidadPagar = document.createElement('P');\r\n    cantidadPagar.classList.add('total');\r\n    cantidadPagar.innerHTML = `<span>Total a Pagar:  </span> $${cantidad}`;\r\n\r\n    resumenDiv.appendChild(cantidadPagar);\r\n\r\n    // Button for reservation\r\n    const btnReserve = document.createElement(\"button\");\r\n    btnReserve.classList.add(\"btn-principal\");\r\n    btnReserve.classList.add(\"btn-reservar\");\r\n    btnReserve.textContent = \"Reservar cita\";\r\n    btnReserve.onclick = makeAnAppointment;\r\n\r\n    resumenDiv.appendChild(btnReserve);\r\n}\r\n\r\nasync function makeAnAppointment(){\r\n    console.log(cita);\r\n    const resultadoCita = await fetch(`/api/user/${userId}`,{method: 'GET', headers: myHeaders, redirect: 'follow'});\r\n}"]}